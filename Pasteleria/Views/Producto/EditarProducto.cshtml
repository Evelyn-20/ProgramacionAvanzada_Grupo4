@model Pasteleria.Abstracciones.ModeloUI.Producto

@{
    ViewBag.Title = "Actualizar Producto";
}

<!-- Banner Hero -->
<section class="hero" style="padding: 3rem 0;">
    <div class="hero-content">
        <h1 class="hero-title">Actualizar Producto</h1>
        <p class="hero-subtitle">Modifica la información del producto</p>
    </div>
</section>

<div class="container" style="padding: 3rem 20px; max-width: 800px;">
    @using (Html.BeginForm("EditarProducto", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.IdProducto)

        <div style="background: var(--white); border-radius: 15px; box-shadow: var(--shadow); overflow: hidden;">
            <!-- Header del formulario -->
            <div style="background: linear-gradient(135deg, var(--secondary-color) 0%, #e8d4bc 100%); padding: 1.5rem 2rem;">
                <h4 style="color: var(--dark-color); margin: 0; font-weight: 600;">
                    <i class="fas fa-edit" style="color: var(--primary-color); margin-right: 0.5rem;"></i>
                    Datos del Producto
                </h4>
            </div>

            <!-- Cuerpo del formulario -->
            <div style="padding: 2rem;">
                @Html.ValidationSummary(true, "Por favor, corrige los siguientes errores:", new { @class = "alert alert-danger", style = "margin-bottom: 1.5rem; padding: 1rem; border-radius: 10px; background: #fee; border: 1px solid #fcc; color: #c33;" })

                <div style="margin-bottom: 1.5rem;">
                    @Html.LabelFor(model => model.NombreProducto, new { @class = "form-label", style = "display: block; margin-bottom: 0.5rem; color: var(--dark-color); font-weight: 500;" })
                    @Html.EditorFor(model => model.NombreProducto, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; padding: 0.8rem 1rem; border: 2px solid var(--secondary-color); border-radius: 10px; font-size: 1rem; transition: all 0.3s;" } })
                    @Html.ValidationMessageFor(model => model.NombreProducto, "", new { @class = "text-danger", style = "color: #c33; font-size: 0.9rem; margin-top: 0.3rem; display: block;" })
                </div>

                <div style="margin-bottom: 1.5rem;">
                    @Html.LabelFor(model => model.IdCategoria, "Categoría", new { @class = "form-label", style = "display: block; margin-bottom: 0.5rem; color: var(--dark-color); font-weight: 500;" })
                    @Html.DropDownListFor(model => model.IdCategoria,
                    new SelectList(new[] {
                                new { Value = "1", Text = "Pasteles" },
                                new { Value = "2", Text = "Panadería" },
                                new { Value = "3", Text = "Galletas" },
                                new { Value = "4", Text = "Postres Especiales" },
                                new { Value = "5", Text = "Cupcakes y Muffins" }
                                }, "Value", "Text", Model.IdCategoria),
                                new { @class = "form-control", style = "width: 100%; padding: 0.8rem 1rem; border: 2px solid var(--secondary-color); border-radius: 10px; font-size: 1rem; transition: all 0.3s;" })
                @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger", style = "color: #c33; font-size: 0.9rem; margin-top: 0.3rem; display: block;" })
            </div>

            <div style="margin-bottom: 1.5rem;">
                @Html.LabelFor(model => model.DescripcionProducto, new { @class = "form-label", style = "display: block; margin-bottom: 0.5rem; color: var(--dark-color); font-weight: 500;" })
                @Html.TextAreaFor(model => model.DescripcionProducto, new { @class = "form-control", rows = "3", style = "width: 100%; padding: 0.8rem 1rem; border: 2px solid var(--secondary-color); border-radius: 10px; font-size: 1rem; transition: all 0.3s; resize: vertical;" })
                @Html.ValidationMessageFor(model => model.DescripcionProducto, "", new { @class = "text-danger", style = "color: #c33; font-size: 0.9rem; margin-top: 0.3rem; display: block;" })
            </div>

            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1.5rem; margin-bottom: 1.5rem;">
                <div>
                    @Html.LabelFor(model => model.Cantidad, new { @class = "form-label", style = "display: block; margin-bottom: 0.5rem; color: var(--dark-color); font-weight: 500;" })
                    @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", style = "width: 100%; padding: 0.8rem 1rem; border: 2px solid var(--secondary-color); border-radius: 10px; font-size: 1rem; transition: all 0.3s;" } })
                    @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger", style = "color: #c33; font-size: 0.9rem; margin-top: 0.3rem; display: block;" })
                </div>

                <div>
                    @Html.LabelFor(model => model.Precio, new { @class = "form-label", style = "display: block; margin-bottom: 0.5rem; color: var(--dark-color); font-weight: 500;" })
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", min = "0", style = "width: 100%; padding: 0.8rem 1rem; border: 2px solid var(--secondary-color); border-radius: 10px; font-size: 1rem; transition: all 0.3s;" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger", style = "color: #c33; font-size: 0.9rem; margin-top: 0.3rem; display: block;" })
                </div>
            </div>

            <div style="margin-bottom: 1.5rem;">
                @Html.LabelFor(model => model.PorcentajeImpuesto, new { @class = "form-label", style = "display: block; margin-bottom: 0.5rem; color: var(--dark-color); font-weight: 500;" })
                @Html.EditorFor(model => model.PorcentajeImpuesto, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", min = "0", max = "100", style = "width: 100%; padding: 0.8rem 1rem; border: 2px solid var(--secondary-color); border-radius: 10px; font-size: 1rem; transition: all 0.3s;" } })
                @Html.ValidationMessageFor(model => model.PorcentajeImpuesto, "", new { @class = "text-danger", style = "color: #c33; font-size: 0.9rem; margin-top: 0.3rem; display: block;" })
            </div>

            <div style="margin-bottom: 1.5rem;">
                <label class="form-label" style="display: block; margin-bottom: 0.5rem; color: var(--dark-color); font-weight: 500;">
                    <i class="fas fa-image" style="color: var(--primary-color); margin-right: 0.5rem;"></i>
                    Cambiar Imagen del Producto
                </label>
                <div style="border: 2px dashed var(--secondary-color); border-radius: 10px; padding: 2rem; text-align: center; background: var(--light-color); transition: all 0.3s;">
                    <i class="fas fa-cloud-upload-alt" style="font-size: 3rem; color: var(--primary-color); opacity: 0.5; margin-bottom: 1rem; display: block;"></i>
                    <input type="file" name="archivo" id="archivoImagen" accept="image/*" style="display: none;" />
                    <label for="archivoImagen" style="cursor: pointer; color: var(--primary-color); font-weight: 600; text-decoration: underline;">
                        Haz clic aquí para seleccionar una nueva imagen
                    </label>
                    <p style="color: var(--text-color); margin-top: 0.5rem; font-size: 0.9rem;">Dejar vacío para mantener la imagen actual</p>
                    <div id="preview" style="margin-top: 1rem;"></div>
                </div>
            </div>

            <div style="margin-bottom: 1.5rem; padding: 1rem; background: var(--light-color); border-radius: 10px; border: 2px solid var(--secondary-color);">
                <div style="display: flex; align-items: center; gap: 1rem;">
                    @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-check-input", id = "estadoCheckbox", style = "width: 50px; height: 25px; cursor: pointer;" } })
                    @Html.LabelFor(model => model.Estado, "Estado del Producto (Activo/Inactivo)", new { @class = "form-check-label", @for = "estadoCheckbox", style = "color: var(--dark-color); font-weight: 500; cursor: pointer; margin: 0;" })
                </div>
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger", style = "color: #c33; font-size: 0.9rem; margin-top: 0.3rem; display: block;" })
                <small style="color: var(--text-color); font-size: 0.85rem; margin-top: 0.5rem; display: block;">
                    <i class="fas fa-toggle-on" style="color: var(--primary-color);"></i> Activa o desactiva la disponibilidad del producto
                </small>
            </div>
        </div>

        <!-- Footer del formulario -->
        <div style="padding: 1.5rem 2rem; background: var(--light-color); display: flex; justify-content: space-between; align-items: center; border-top: 1px solid var(--secondary-color); gap: 1rem; flex-wrap: wrap;">
            <button type="button" class="btn btn-secondary" onclick="window.location.href='@Url.Action("ListadoProductos", "Producto")'" style="display: flex; align-items: center; gap: 0.5rem;">
                <i class="fas fa-times"></i> Cancelar
            </button>
            <button type="submit" class="btn btn-primary" style="display: flex; align-items: center; gap: 0.5rem; background: #27ae60;">
                <i class="fas fa-check"></i> Guardar Cambios
            </button>
        </div>
    </div>
        }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Mejorar la experiencia con los inputs
            var inputs = document.querySelectorAll('.form-control');
            inputs.forEach(function(input) {
                input.addEventListener('focus', function() {
                    this.style.borderColor = 'var(--primary-color)';
                    this.style.boxShadow = '0 0 0 3px rgba(212, 130, 92, 0.1)';
                });
                input.addEventListener('blur', function() {
                    this.style.borderColor = 'var(--secondary-color)';
                    this.style.boxShadow = 'none';
                });
            });

            // Preview de imagen
            var inputArchivo = document.getElementById('archivoImagen');
            if (inputArchivo) {
                inputArchivo.addEventListener('change', function(e) {
                    var file = e.target.files[0];
                    if (file) {
                        var reader = new FileReader();
                        reader.onload = function(e) {
                            var preview = document.getElementById('preview');
                            preview.innerHTML = '<img src="' + e.target.result + '" style="max-width: 200px; max-height: 200px; border-radius: 10px; box-shadow: var(--shadow);" />';
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }
        });
    </script>
}